{"ast":null,"code":"var _jsxFileName = \"/Users/adambrook/Downloads/Q-Forums/frontend/src/components/Results.jsx\",\n  _s = $RefreshSig$();\n/*import React from \"react\";\n\nimport \"./Results.css\";\n\nconst Results = ({ results }) => {\n  return (\n    <div className=\"results\">\n      {results.map((result) => (\n        <div key={result.id} className=\"result-item\">\n          <div className=\"result-title\">{result.title}</div>\n          <a href={result.link} target=\"_blank\" rel=\"noreferrer\" className=\"result-link\">\n            {result.link}\n          </a>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Results;\n*/\n\n// frontend/src/components/Results.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Results.css'; // Make sure this CSS file includes the styling for credibility bars\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Results = ({\n  posts\n}) => {\n  _s();\n  const [credibilityScores, setCredibilityScores] = useState([]);\n  useEffect(() => {\n    if (posts && posts.length > 0) {\n      // Fetch credibility scores from the SageMaker endpoint\n      const fetchCredibilityScores = async () => {\n        try {\n          const response = await axios.post(\"your-sagemaker-endpoint-url\", {\n            posts\n          });\n          setCredibilityScores(response.data);\n        } catch (error) {\n          console.error(\"Error fetching credibility scores:\", error);\n        }\n      };\n      fetchCredibilityScores();\n    }\n  }, [posts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts && posts.length > 0 ? posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-title\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"credibility-bar\",\n        children: Array(5).fill().map((_, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `bar ${credibilityScores[index] >= (i + 1) / 5 ? 'filled' : ''}`\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No posts to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Results, \"MhyyKlCA/23JpKOVmvUBnwVGXnE=\");\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Results","posts","_s","credibilityScores","setCredibilityScores","length","fetchCredibilityScores","response","post","data","error","console","children","map","index","className","title","fileName","_jsxFileName","lineNumber","columnNumber","Array","fill","_","i","id","_c","$RefreshReg$"],"sources":["/Users/adambrook/Downloads/Q-Forums/frontend/src/components/Results.jsx"],"sourcesContent":["/*import React from \"react\";\n\nimport \"./Results.css\";\n\nconst Results = ({ results }) => {\n  return (\n    <div className=\"results\">\n      {results.map((result) => (\n        <div key={result.id} className=\"result-item\">\n          <div className=\"result-title\">{result.title}</div>\n          <a href={result.link} target=\"_blank\" rel=\"noreferrer\" className=\"result-link\">\n            {result.link}\n          </a>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Results;\n*/\n\n\n\n// frontend/src/components/Results.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Results.css'; // Make sure this CSS file includes the styling for credibility bars\n\nconst Results = ({ posts }) => {\n  const [credibilityScores, setCredibilityScores] = useState([]);\n\n  useEffect(() => {\n    if (posts && posts.length > 0) {\n      // Fetch credibility scores from the SageMaker endpoint\n      const fetchCredibilityScores = async () => {\n        try {\n          const response = await axios.post(\"your-sagemaker-endpoint-url\", { posts });\n          setCredibilityScores(response.data);\n        } catch (error) {\n          console.error(\"Error fetching credibility scores:\", error);\n        }\n      };\n      fetchCredibilityScores();\n    }\n  }, [posts]);\n\n  return (\n    <div>\n      {posts && posts.length > 0 ? (\n        posts.map((post, index) => (\n          <div key={post.id} className=\"post\">\n            <div className=\"post-title\">{post.title}</div>\n            <div className=\"credibility-bar\">\n              {Array(5).fill().map((_, i) => (\n                <span key={i} className={`bar ${credibilityScores[index] >= (i+1)/5 ? 'filled' : ''}`}></span>\n              ))}\n            </div>\n          </div>\n        ))\n      ) : (\n        <div>No posts to display</div>\n      )}\n    </div>\n  );\n};\n\nexport default Results;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACd,IAAIK,KAAK,IAAIA,KAAK,CAACI,MAAM,GAAG,CAAC,EAAE;MAC7B;MACA,MAAMC,sBAAsB,GAAG,MAAAA,CAAA,KAAY;QACzC,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,6BAA6B,EAAE;YAAEP;UAAM,CAAC,CAAC;UAC3EG,oBAAoB,CAACG,QAAQ,CAACE,IAAI,CAAC;QACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;QAC5D;MACF,CAAC;MACDJ,sBAAsB,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEX,oBACEF,OAAA;IAAAa,QAAA,EACGX,KAAK,IAAIA,KAAK,CAACI,MAAM,GAAG,CAAC,GACxBJ,KAAK,CAACY,GAAG,CAAC,CAACL,IAAI,EAAEM,KAAK,kBACpBf,OAAA;MAAmBgB,SAAS,EAAC,MAAM;MAAAH,QAAA,gBACjCb,OAAA;QAAKgB,SAAS,EAAC,YAAY;QAAAH,QAAA,EAAEJ,IAAI,CAACQ;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC9CrB,OAAA;QAAKgB,SAAS,EAAC,iBAAiB;QAAAH,QAAA,EAC7BS,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACT,GAAG,CAAC,CAACU,CAAC,EAAEC,CAAC,kBACxBzB,OAAA;UAAcgB,SAAS,EAAE,OAAOZ,iBAAiB,CAACW,KAAK,CAAC,IAAI,CAACU,CAAC,GAAC,CAAC,IAAE,CAAC,GAAG,QAAQ,GAAG,EAAE;QAAG,GAA3EA,CAAC;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiF,CAC9F;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,GANEZ,IAAI,CAACiB,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOZ,CACN,CAAC,gBAEFrB,OAAA;MAAAa,QAAA,EAAK;IAAmB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAC9B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CApCIF,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAsCb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}